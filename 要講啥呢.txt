大家好，我的報告會先
說明調整模型的流程，接著會介紹BP的架構。

流程的部分就是先把拿到的訓練資料分成訓練和測試兩個部分，
其中訓練資料的28*28大小的圖拉成長784的向量，
再把他除以255讓input值介於0-1之間，
y也就是最後要辨認的標籤，
依據總共有幾種標籤改為長度有多長的向量，
向量裡面要辨識的是第幾個標籤的那個位置是1以外其他都是0。
再把Xy放進BPNN訓練。

同時剩下兩成的測試部分也是拉成長784的向量再除255，
放進訓練好的BPNN後，
跑完的output改為標籤形式之後和測試的標籤比較，計算準確率，並且調整參數。

接下來BP的架構的部分，
主要有幾個變數是會調整的，像是learning rate，
還有因為我是設定有兩個隱藏層，所以隱藏層的神經元數也是會去做調整的變數，
一開始先設定好讀入的資料的大小決定的第一層的神經元有幾個，
還有根據識別的標籤數決定的輸出層的神經元。
參數都設定完之後
接下來就是設定初始的weight，我是假設標準常態分佈

接下來就是不斷修正
首先為了可以一直循環每一張圖，
所以設定每次計算使用的圖是現在跑的次數t除以總數的餘數。
接下來開始修正，
先從第一層開始乘以權數往輸出層傳，
其中第1層到最後的輸出分別叫hidden 1 2和output

接下來用每次的output做修正的部分，
主要就是用講義的公式
先計算delta，再逐次修正權重，
第ji層的權重是由第i個，也就是前面的輸出
和第j個delta，也就是後面層的delta，組成的
因為每個權重都是由前一層的輸出和後一層的delta對到，
所以我就用tensor porduct讓每個delta和output對到，形成一個矩陣，
然後再乘以learning rate，
這邊就是修正的整個過程
最後也是我會調整的參數，跑到太多次或是輸出和真正的y差異夠小就停下來
